package seeders

import (
	goravelfacades "github.com/goravel/framework/facades"
	json2 "github.com/goravel/framework/support/json"
	"goravel/packages/goravel_pdf_gen/models"
)

type TplSeeder struct {
}

// Signature The name and signature of the seeder.
func (s *TplSeeder) Signature() string {
	return "TplSeeder"
}

// Run executes the seeder logic.
func (s *TplSeeder) Run() error {
	htmlTpl := "<!DOCTYPE html>\n<html lang=\"zh-CN\">\n<head>\n  <meta charset=\"UTF-8\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n  <title>合同PDF动态生成系统</title>\n  <script src=\"https://unpkg.com/vue@3/dist/vue.global.js\"></script>\n  <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css\">\n  <style>\n    * {\n      margin: 0;\n      padding: 0;\n      box-sizing: border-box;\n      font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n    }\n    \n    body {\n      background: linear-gradient(135deg, #1a2a6c, #b21f1f, #1a2a6c);\n      min-height: 100vh;\n      padding: 20px;\n      color: #333;\n    }\n    \n    .container {\n      max-width: 1800px;\n      margin: 0 auto;\n    }\n    \n    header {\n      text-align: center;\n      padding: 20px 0;\n      color: white;\n      margin-bottom: 30px;\n    }\n    \n    header h1 {\n      font-size: 2.8rem;\n      margin-bottom: 10px;\n      text-shadow: 0 2px 8px rgba(0,0,0,0.3);\n    }\n    \n    header p {\n      font-size: 1.3rem;\n      max-width: 900px;\n      margin: 0 auto;\n      opacity: 0.9;\n      line-height: 1.6;\n    }\n    \n    .tabs {\n      display: flex;\n      background: rgba(255, 255, 255, 0.1);\n      border-radius: 10px;\n      padding: 10px;\n      margin-bottom: 25px;\n      max-width: 1000px;\n      margin: 0 auto 25px;\n      flex-wrap: wrap;\n    }\n    \n    .tab {\n      flex: 1;\n      padding: 15px;\n      text-align: center;\n      color: white;\n      font-size: 1.1rem;\n      font-weight: 600;\n      cursor: pointer;\n      border-radius: 8px;\n      transition: all 0.3s ease;\n      min-width: 200px;\n    }\n    \n    .tab.active {\n      background: rgba(255, 255, 255, 0.2);\n      box-shadow: 0 4px 15px rgba(0, 0, 0, 0.2);\n    }\n    \n    .tab i {\n      margin-right: 10px;\n      font-size: 1.2rem;\n    }\n    \n    .app-container {\n      display: flex;\n      gap: 25px;\n      background: rgba(255, 255, 255, 0.95);\n      border-radius: 15px;\n      box-shadow: 0 15px 50px rgba(0, 0, 0, 0.3);\n      overflow: hidden;\n      min-height: 700px;\n    }\n    \n    .panel {\n      padding: 25px;\n      flex: 1;\n      display: flex;\n      flex-direction: column;\n      min-width: 0; /* 修复宽度问题 */\n    }\n    \n    .schema-editor {\n      background: #f8f9fa;\n      border-right: 1px solid #e0e0e0;\n    }\n    \n    .form-preview {\n      background: white;\n    }\n    \n    .panel-title {\n      display: flex;\n      align-items: center;\n      gap: 10px;\n      margin-bottom: 20px;\n      padding-bottom: 15px;\n      border-bottom: 2px solid #2c3e50;\n      color: #2c3e50;\n    }\n    \n    .panel-title i {\n      font-size: 1.6rem;\n    }\n    \n    .panel-title h2 {\n      font-size: 1.8rem;\n      font-weight: 700;\n    }\n    \n    textarea {\n      width: 100%;\n      height: 300px;\n      padding: 15px;\n      border: 1px solid #ddd;\n      border-radius: 8px;\n      font-family: monospace;\n      font-size: 15px;\n      resize: none;\n      transition: all 0.3s;\n    }\n    \n    textarea:focus {\n      outline: none;\n      border-color: #3498db;\n      box-shadow: 0 0 0 3px rgba(52, 152, 219, 0.2);\n    }\n    \n    .actions {\n      display: flex;\n      gap: 15px;\n      margin-top: 20px;\n      flex-wrap: wrap;\n    }\n    \n    button {\n      padding: 14px 20px;\n      color: white;\n      border: none;\n      border-radius: 8px;\n      font-size: 1.1rem;\n      font-weight: 600;\n      cursor: pointer;\n      transition: all 0.3s;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      gap: 10px;\n      flex: 1;\n      min-width: 200px;\n    }\n    \n    button.primary {\n      background: linear-gradient(to right, #3498db, #2980b9);\n    }\n    \n    button.secondary {\n      background: linear-gradient(to right, #7f8c8d, #95a5a6);\n    }\n    \n    button.success {\n      background: linear-gradient(to right, #27ae60, #2ecc71);\n    }\n    \n    button.danger {\n      background: linear-gradient(to right, #e74c3c, #c0392b);\n    }\n    \n    button:hover {\n      transform: translateY(-3px);\n      box-shadow: 0 5px 15px rgba(0, 0, 0, 0.2);\n    }\n    \n    .form-container {\n      flex: 1;\n      overflow-y: auto;\n      padding: 10px;\n    }\n    \n    .form-group {\n      margin-bottom: 25px;\n      padding: 20px;\n      background: #f8f9fa;\n      border-radius: 10px;\n      box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);\n      position: relative;\n    }\n    \n    .form-group h3 {\n      margin-bottom: 15px;\n      color: #2c3e50;\n      font-size: 1.4rem;\n      padding-bottom: 8px;\n      border-bottom: 1px solid #eee;\n    }\n    \n    label {\n      display: block;\n      margin-bottom: 8px;\n      font-weight: 600;\n      color: #2c3e50;\n    }\n    \n    input, select, textarea {\n      width: 100%;\n      padding: 14px;\n      border: 1px solid #ced4da;\n      border-radius: 8px;\n      font-size: 1rem;\n      transition: all 0.3s;\n      background: white;\n    }\n    \n    input:focus, select:focus, textarea:focus {\n      outline: none;\n      border-color: #3498db;\n      box-shadow: 0 0 0 3px rgba(52, 152, 219, 0.2);\n    }\n    \n    .error {\n      color: #e74c3c;\n      font-size: 0.9rem;\n      margin-top: 5px;\n    }\n    \n    .form-container:empty::before {\n      content: \"请提供有效的JSON Schema来生成表单\";\n      display: block;\n      text-align: center;\n      padding: 40px;\n      color: #7f8c8d;\n      font-size: 1.2rem;\n    }\n    \n    .data-preview {\n      background: #2c3e50;\n      color: white;\n      padding: 25px;\n      border-radius: 10px;\n      margin-top: 20px;\n      font-family: monospace;\n      white-space: pre-wrap;\n      max-height: 250px;\n      overflow-y: auto;\n      line-height: 1.5;\n    }\n    \n    .data-preview-title {\n      display: flex;\n      align-items: center;\n      gap: 10px;\n      margin-bottom: 15px;\n      color: #3498db;\n    }\n    \n    .status {\n      margin-top: 15px;\n      padding: 15px;\n      border-radius: 8px;\n      text-align: center;\n      font-weight: 500;\n      font-size: 1.1rem;\n    }\n    \n    .success {\n      background: #d4edda;\n      color: #155724;\n      border-left: 4px solid #28a745;\n    }\n    \n    .error-status {\n      background: #f8d7da;\n      color: #721c24;\n      border-left: 4px solid #dc3545;\n    }\n    \n    .info {\n      background: #cce5ff;\n      color: #004085;\n      border-left: 4px solid #007bff;\n    }\n    \n    .template-container {\n      display: flex;\n      flex-direction: column;\n      height: 100%;\n    }\n    \n    .editor-container {\n      flex: 1;\n      display: flex;\n      flex-direction: column;\n      border: 1px solid #ddd;\n      border-radius: 8px;\n      overflow: hidden;\n    }\n    \n    .editor-header {\n      background: #2c3e50;\n      color: white;\n      padding: 10px 15px;\n      font-weight: 600;\n      display: flex;\n      justify-content: space-between;\n      flex-wrap: wrap;\n    }\n    \n    #templateEditor {\n      height: 400px;\n      width: 100%;\n      border: none;\n      background: #1e1e1e;\n      color: #d4d4d4;\n      padding: 15px;\n      font-family: monospace;\n      font-size: 14px;\n      line-height: 1.5;\n      resize: vertical;\n    }\n    \n    .contract-preview {\n      flex: 1;\n      background: white;\n      border: 1px solid #ddd;\n      border-radius: 8px;\n      padding: 20px;\n      overflow-y: auto;\n      margin-top: 20px;\n      font-family: 'Times New Roman', Times, serif;\n      line-height: 1.8;\n    }\n    \n    .contract-preview h1 {\n      text-align: center;\n      margin-bottom: 30px;\n      color: #2c3e50;\n      border-bottom: 2px solid #2c3e50;\n      padding-bottom: 15px;\n    }\n    \n    .contract-section {\n      margin-bottom: 30px;\n    }\n    \n    .contract-section h2 {\n      color: #2c3e50;\n      margin-bottom: 15px;\n      border-left: 4px solid #3498db;\n      padding-left: 10px;\n    }\n    \n    .contract-variable {\n      background: #fff8e1;\n      padding: 2px 5px;\n      border-radius: 4px;\n      border: 1px dashed #ffc107;\n    }\n    \n    .signature-area {\n      display: flex;\n      justify-content: space-between;\n      margin-top: 60px;\n      padding-top: 20px;\n      border-top: 1px solid #ccc;\n      flex-wrap: wrap;\n    }\n    \n    .signature-box {\n      width: 45%;\n      text-align: center;\n      min-width: 200px;\n      margin-bottom: 20px;\n    }\n    \n    .signature-line {\n      height: 1px;\n      background: #333;\n      margin: 40px 0 10px;\n    }\n    \n    .template-actions {\n      display: flex;\n      gap: 15px;\n      margin-top: 20px;\n      flex-wrap: wrap;\n    }\n    \n    .template-actions button {\n      flex: none;\n      width: auto;\n      padding: 12px 25px;\n    }\n    \n    .tab-content {\n      display: none;\n    }\n    \n    .tab-content.active {\n      display: block;\n    }\n    \n    .pdf-preview {\n      width: 100%;\n      height: 600px;\n      background: #f0f0f0;\n      border-radius: 8px;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      margin-top: 20px;\n      flex-direction: column;\n    }\n    \n    .pdf-preview img {\n      max-width: 100%;\n      max-height: 500px;\n      box-shadow: 0 5px 15px rgba(0,0,0,0.2);\n    }\n    \n    .pdf-preview p {\n      margin-top: 20px;\n      color: #7f8c8d;\n      font-size: 1.2rem;\n    }\n    \n    .download-btn {\n      margin-top: 25px;\n      padding: 15px 40px;\n      font-size: 1.2rem;\n    }\n    \n    .template-syntax {\n      margin-top: 10px;\n      padding: 15px;\n      background: #f8f9fa;\n      border-radius: 8px;\n      font-size: 0.9rem;\n    }\n    \n    .template-syntax h4 {\n      margin-bottom: 10px;\n      color: #2c3e50;\n    }\n    \n    .syntax-example {\n      background: #2c3e50;\n      color: white;\n      padding: 10px;\n      border-radius: 4px;\n      font-family: monospace;\n      margin-top: 5px;\n    }\n    \n    @media (max-width: 1200px) {\n      .app-container {\n        flex-direction: column;\n      }\n      \n      .schema-editor {\n        border-right: none;\n        border-bottom: 1px solid #eee;\n      }\n      \n      header h1 {\n        font-size: 2.2rem;\n      }\n      \n      .tab {\n        min-width: 150px;\n        padding: 10px;\n        font-size: 1rem;\n      }\n    }\n    \n    @media (max-width: 768px) {\n      .tabs {\n        flex-direction: column;\n      }\n      \n      .signature-box {\n        width: 100%;\n      }\n      \n      .panel-title h2 {\n        font-size: 1.5rem;\n      }\n      \n      button {\n        min-width: 100%;\n      }\n    }\n  </style>\n</head>\n<body>\n  <div id=\"app\">\n    <div class=\"container\">\n      <header>\n        <h1><i class=\"fas fa-file-contract\"></i> 合同PDF动态生成系统</h1>\n        <p>使用JSON Schema设计表单，编辑合同模板，动态生成PDF文件</p>\n      </header>\n      \n      <div class=\"tabs\">\n        <div class=\"tab\" @click=\"currentTab = 'design'\" :class=\"{active: currentTab === 'design'}\">\n          <i class=\"fas fa-drafting-compass\"></i> 表单设计\n        </div>\n        <div class=\"tab\" @click=\"currentTab = 'template'\" :class=\"{active: currentTab === 'template'}\">\n          <i class=\"fas fa-file-alt\"></i> 模板编辑\n        </div>\n        <div class=\"tab\" @click=\"currentTab = 'generate'\" :class=\"{active: currentTab === 'generate'}\">\n          <i class=\"fas fa-file-pdf\"></i> 生成PDF\n        </div>\n      </div>\n      \n      <div class=\"tab-content active\" v-if=\"currentTab === 'design'\">\n        <div class=\"app-container\">\n          <div class=\"panel schema-editor\">\n            <div class=\"panel-title\">\n              <i class=\"fas fa-code\"></i>\n              <h2>Schema 编辑器</h2>\n            </div>\n            \n            <textarea v-model=\"schemaJson\" placeholder=\"在此输入您的JSON Schema...\"></textarea>\n            \n            <div class=\"actions\">\n              <button @click=\"generateForm\" class=\"primary\">\n                <i class=\"fas fa-play\"></i> 生成表单\n              </button>\n              <button @click=\"loadExample\" class=\"secondary\">\n                <i class=\"fas fa-lightbulb\"></i> 加载示例\n              </button>\n              <button @click=\"resetForm\" class=\"danger\">\n                <i class=\"fas fa-trash\"></i> 重置\n              </button>\n            </div>\n            \n            <div :class=\"['status', status.type]\">\n              {{ status.message }}\n            </div>\n            \n            <div class=\"data-preview\">\n              <div class=\"data-preview-title\">\n                <i class=\"fas fa-database\"></i>\n                <h3>表单数据预览</h3>\n              </div>\n              <pre>{{ formData }}</pre>\n            </div>\n          </div>\n          \n          <div class=\"panel form-preview\">\n            <div class=\"panel-title\">\n              <i class=\"fas fa-window-maximize\"></i>\n              <h2>表单预览</h2>\n            </div>\n            \n            <div class=\"form-container\">\n              <template v-if=\"formFields.length\">\n                <div v-for=\"(field, index) in formFields\" :key=\"index\" class=\"form-group\">\n                  <h3>{{ field.title }}</h3>\n                  <p v-if=\"field.description\" class=\"description\">{{ field.description }}</p>\n                  \n                  <div v-if=\"field.type === 'string' && !field.enum\">\n                    <label :for=\"field.key\">{{ field.title }}<span v-if=\"field.required\"> *</span></label>\n                    <input \n                      type=\"text\" \n                      v-model=\"formData[field.key]\"\n                      :placeholder=\"field.placeholder\"\n                      :required=\"field.required\"\n                    >\n                  </div>\n                  \n                  <div v-if=\"field.type === 'string' && field.enum\">\n                    <label :for=\"field.key\">{{ field.title }}<span v-if=\"field.required\"> *</span></label>\n                    <select v-model=\"formData[field.key]\" :required=\"field.required\">\n                      <option v-for=\"(option, i) in field.enum\" :key=\"i\" :value=\"option\">\n                        {{ option }}\n                      </option>\n                    </select>\n                  </div>\n                  \n                  <div v-if=\"field.type === 'number'\">\n                    <label :for=\"field.key\">{{ field.title }}<span v-if=\"field.required\"> *</span></label>\n                    <input \n                      type=\"number\" \n                      v-model.number=\"formData[field.key]\"\n                      :placeholder=\"field.placeholder\"\n                      :min=\"field.minimum\"\n                      :max=\"field.maximum\"\n                      :required=\"field.required\"\n                    >\n                  </div>\n                  \n                  <div v-if=\"field.type === 'boolean'\">\n                    <div class=\"checkbox-group\">\n                      <input type=\"checkbox\" :id=\"field.key\" v-model=\"formData[field.key]\">\n                      <label :for=\"field.key\">{{ field.title }}</label>\n                    </div>\n                  </div>\n                  \n                  <div v-if=\"field.type === 'string' && field.radioOptions\">\n                    <label>{{ field.title }}<span v-if=\"field.required\"> *</span></label>\n                    <div class=\"radio-group\">\n                      <label v-for=\"(option, i) in field.radioOptions\" :key=\"i\">\n                        <input \n                          type=\"radio\" \n                          :name=\"field.key\" \n                          :value=\"option.value\"\n                          v-model=\"formData[field.key]\"\n                          :required=\"field.required\"\n                        >\n                        {{ option.label }}\n                      </label>\n                    </div>\n                  </div>\n                  \n                  <div v-if=\"field.type === 'string' && field.format === 'textarea'\">\n                    <label :for=\"field.key\">{{ field.title }}<span v-if=\"field.required\"> *</span></label>\n                    <textarea \n                      v-model=\"formData[field.key]\"\n                      :placeholder=\"field.placeholder\"\n                      :rows=\"field.rows || 4\"\n                      :required=\"field.required\"\n                    ></textarea>\n                  </div>\n                  \n                  <div v-if=\"field.type === 'date'\">\n                    <label :for=\"field.key\">{{ field.title }}<span v-if=\"field.required\"> *</span></label>\n                    <input \n                      type=\"date\" \n                      v-model=\"formData[field.key]\"\n                      :required=\"field.required\"\n                    >\n                  </div>\n                </div>\n                \n                <div class=\"form-group\">\n                  <button class=\"success\" @click=\"saveFormData\">\n                    <i class=\"fas fa-save\"></i> 保存表单数据\n                  </button>\n                </div>\n              </template>\n            </div>\n          </div>\n        </div>\n      </div>\n      \n      <div class=\"tab-content\" :class=\"{active: currentTab === 'template'}\" v-if=\"currentTab === 'template'\">\n        <div class=\"app-container\">\n          <div class=\"panel\">\n            <div class=\"panel-title\">\n              <i class=\"fas fa-edit\"></i>\n              <h2>合同模板编辑器</h2>\n            </div>\n            \n            <div class=\"template-container\">\n              <div class=\"editor-container\">\n                <div class=\"editor-header\">\n                  <div>合同模板编辑 (使用[[ ]]作为Golang模板语法)</div>\n                  <div>可用变量: {{ availableVariables.join(', ') }}</div>\n                </div>\n                <textarea id=\"templateEditor\" v-model=\"contractTemplate\"></textarea>\n              </div>\n              \n              <div class=\"template-actions\">\n                <button class=\"primary\" @click=\"updateTemplatePreview\">\n                  <i class=\"fas fa-sync\"></i> 更新预览\n                </button>\n                <button class=\"success\" @click=\"saveTemplate\">\n                  <i class=\"fas fa-save\"></i> 保存模板\n                </button>\n                <button class=\"secondary\" @click=\"loadTemplateExample\">\n                  <i class=\"fas fa-file-alt\"></i> 加载示例\n                </button>\n              </div>\n              \n              <div class=\"template-syntax\">\n                <h4><i class=\"fas fa-info-circle\"></i> 模板语法说明</h4>\n                <p>使用双中括号 <code>[[ ]]</code> 作为模板变量标记：</p>\n                <div class=\"syntax-example\">\n                  &lt;p&gt;合同编号：[[.contractNo]]&lt;/p&gt;<br>\n                  &lt;p&gt;签署日期：[[.signDate]]&lt;/p&gt;\n                </div>\n                <p>在后端处理时，这些标记会被转换为Golang的标准模板语法 <code>{{ }}</code></p>\n              </div>\n              \n              <div class=\"contract-preview\" v-html=\"compiledTemplate\"></div>\n            </div>\n          </div>\n        </div>\n      </div>\n      \n      <div class=\"tab-content\" :class=\"{active: currentTab === 'generate'}\" v-if=\"currentTab === 'generate'\">\n        <div class=\"app-container\">\n          <div class=\"panel\">\n            <div class=\"panel-title\">\n              <i class=\"fas fa-file-pdf\"></i>\n              <h2>PDF生成</h2>\n            </div>\n            \n            <div class=\"status info\">\n              <i class=\"fas fa-info-circle\"></i> 表单数据已准备就绪，点击下方按钮生成PDF\n            </div>\n            \n            <div class=\"actions\">\n              <button class=\"success\" @click=\"generatePDF\">\n                <i class=\"fas fa-cogs\"></i> 生成PDF合同\n              </button>\n            </div>\n            \n            <div class=\"pdf-preview\" v-if=\"pdfGenerated\">\n              <img src=\"https://cdn-icons-png.flaticon.com/512/337/337946.png\" alt=\"PDF Preview\">\n              <p>合同PDF生成成功！</p>\n              <button class=\"primary download-btn\" @click=\"downloadPDF\">\n                <i class=\"fas fa-download\"></i> 下载PDF文件\n              </button>\n            </div>\n            <div class=\"pdf-preview\" v-else>\n              <i class=\"fas fa-file-pdf\" style=\"font-size: 120px; color: #e74c3c;\"></i>\n              <p>点击上方按钮生成PDF文件</p>\n            </div>\n            \n            <div class=\"data-preview\">\n              <div class=\"data-preview-title\">\n                <i class=\"fas fa-code\"></i>\n                <h3>最终合同HTML</h3>\n              </div>\n              <pre>{{ compiledTemplate }}</pre>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <script>\n    const { createApp, ref, reactive, computed, watch } = Vue;\n    \n    createApp({\n      setup() {\n        // 初始JSON Schema示例\n        const exampleSchema = {\n          \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n          \"title\": \"销售合同\",\n          \"description\": \"销售合同表单数据\",\n          \"type\": \"object\",\n          \"properties\": {\n            \"contractTitle\": {\n              \"type\": \"string\",\n              \"title\": \"合同标题\",\n              \"default\": \"产品销售合同\"\n            },\n            \"contractNo\": {\n              \"type\": \"string\",\n              \"title\": \"合同编号\",\n              \"pattern\": \"^CT-[0-9]{8}$\"\n            },\n            \"signDate\": {\n              \"type\": \"string\",\n              \"title\": \"签署日期\",\n              \"format\": \"date\"\n            },\n            \"sellerName\": {\n              \"type\": \"string\",\n              \"title\": \"卖方名称\"\n            },\n            \"buyerName\": {\n              \"type\": \"string\",\n              \"title\": \"买方名称\"\n            },\n            \"productName\": {\n              \"type\": \"string\",\n              \"title\": \"产品名称\"\n            },\n            \"quantity\": {\n              \"type\": \"number\",\n              \"title\": \"数量\",\n              \"minimum\": 1\n            },\n            \"unitPrice\": {\n              \"type\": \"number\",\n              \"title\": \"单价\",\n              \"minimum\": 0\n            },\n            \"totalAmount\": {\n              \"type\": \"number\",\n              \"title\": \"总金额\",\n              \"readOnly\": true\n            },\n            \"deliveryDate\": {\n              \"type\": \"string\",\n              \"title\": \"交货日期\",\n              \"format\": \"date\"\n            },\n            \"paymentTerms\": {\n              \"type\": \"string\",\n              \"title\": \"付款条款\",\n              \"enum\": [\"预付全款\", \"货到付款\", \"30天账期\", \"60天账期\"]\n            },\n            \"warrantyPeriod\": {\n              \"type\": \"string\",\n              \"title\": \"保修期\",\n              \"enum\": [\"6个月\", \"1年\", \"2年\", \"3年\", \"5年\"]\n            },\n            \"specialTerms\": {\n              \"type\": \"string\",\n              \"title\": \"特别条款\",\n              \"format\": \"textarea\",\n              \"rows\": 4\n            }\n          },\n          \"required\": [\"contractTitle\", \"contractNo\", \"sellerName\", \"buyerName\", \"productName\", \"quantity\", \"unitPrice\"]\n        };\n        \n        // 响应式数据\n        const currentTab = ref('design');\n        const schemaJson = ref(JSON.stringify(exampleSchema, null, 2));\n        const formFields = ref([]);\n        const formData = ref({});\n        const status = reactive({\n          type: 'success',\n          message: '已加载示例Schema，点击\"生成表单\"按钮创建表单'\n        });\n        const contractTemplate = ref('');\n        const compiledTemplate = ref('');\n        const availableVariables = ref([]);\n        const pdfGenerated = ref(false);\n        \n        // 合同模板示例（使用[[ ]]作为模板语法）\n        const templateExample = `\n<html>\n<head>\n  <title>[[.contractTitle]]</title>\n  <style>\n    .contract-container { \n      font-family: 'Times New Roman', Times, serif; \n      line-height: 1.8;\n      color: #333;\n      max-width: 800px;\n      margin: 0 auto;\n      padding: 40px;\n      background: #fff;\n    }\n    .header {\n      text-align: center;\n      margin-bottom: 40px;\n    }\n    h1 {\n      font-size: 28px;\n      color: #1a3a6c;\n      margin-bottom: 10px;\n      border-bottom: 2px solid #1a3a6c;\n      padding-bottom: 15px;\n    }\n    .contract-info {\n      display: flex;\n      justify-content: space-between;\n      margin-bottom: 30px;\n      font-size: 16px;\n    }\n    .parties {\n      display: flex;\n      justify-content: space-between;\n      margin: 30px 0;\n    }\n    .party {\n      width: 45%;\n    }\n    .party h2 {\n      font-size: 20px;\n      border-bottom: 1px solid #ccc;\n      padding-bottom: 8px;\n      margin-bottom: 15px;\n    }\n    .terms-section {\n      margin: 30px 0;\n    }\n    .terms-section h2 {\n      font-size: 20px;\n      color: #1a3a6c;\n      border-left: 4px solid #1a3a6c;\n      padding-left: 10px;\n      margin: 25px 0 15px;\n    }\n    .signature-area {\n      display: flex;\n      justify-content: space-between;\n      margin-top: 80px;\n    }\n    .signature-box {\n      width: 45%;\n      text-align: center;\n    }\n    .signature-line {\n      height: 1px;\n      background: #333;\n      margin: 40px 0 10px;\n    }\n    .variable {\n      background: #fff8e1;\n      padding: 2px 5px;\n      border-radius: 4px;\n      border: 1px dashed #ffc107;\n    }\n  </style>\n</head>\n<body class=\"contract-container\">\n  <div class=\"header\">\n    <h1>[[.contractTitle]]</h1>\n    <p>合同编号：<span class=\"variable\">[[.contractNo]]</span></p>\n  </div>\n  \n  <div class=\"contract-info\">\n    <div>签订日期：<span class=\"variable\">[[.signDate]]</span></div>\n    <div>生效日期：<span class=\"variable\">[[.signDate]]</span></div>\n  </div>\n  \n  <div class=\"parties\">\n    <div class=\"party\">\n      <h2>甲方（卖方）</h2>\n      <p>名称：<span class=\"variable\">[[.sellerName]]</span></p>\n    </div>\n    \n    <div class=\"party\">\n      <h2>乙方（买方）</h2>\n      <p>名称：<span class=\"variable\">[[.buyerName]]</span></p>\n    </div>\n  </div>\n  \n  <div class=\"terms-section\">\n    <h2>第一条 产品信息</h2>\n    <p>1.1 产品名称：<span class=\"variable\">[[.productName]]</span></p>\n    <p>1.2 产品数量：<span class=\"variable\">[[.quantity]]</span></p>\n    <p>1.3 产品单价：人民币 <span class=\"variable\">[[.unitPrice]]</span> 元</p>\n    <p>1.4 总金额：人民币 <span class=\"variable\">[[.totalAmount]]</span> 元</p>\n  </div>\n  \n  <div class=\"terms-section\">\n    <h2>第二条 交货条款</h2>\n    <p>2.1 交货日期：<span class=\"variable\">[[.deliveryDate]]</span></p>\n    <p>2.2 交货地点：买方指定地点</p>\n  </div>\n  \n  <div class=\"terms-section\">\n    <h2>第三条 付款条款</h2>\n    <p>3.1 付款方式：<span class=\"variable\">[[.paymentTerms]]</span></p>\n    <p>3.2 付款期限：自合同签订之日起30日内</p>\n  </div>\n  \n  <div class=\"terms-section\">\n    <h2>第四条 保修条款</h2>\n    <p>4.1 保修期限：<span class=\"variable\">[[.warrantyPeriod]]</span></p>\n    <p>4.2 保修范围：产品制造缺陷</p>\n  </div>\n  \n  <div class=\"terms-section\">\n    <h2>第五条 特别条款</h2>\n    <p><span class=\"variable\">[[.specialTerms]]</span></p>\n  </div>\n  \n  <div class=\"signature-area\">\n    <div class=\"signature-box\">\n      <p>甲方（卖方）签字：</p>\n      <div class=\"signature-line\"></div>\n      <p>日期：<span class=\"variable\">[[.signDate]]</span></p>\n    </div>\n    \n    <div class=\"signature-box\">\n      <p>乙方（买方）签字：</p>\n      <div class=\"signature-line\"></div>\n      <p>日期：<span class=\"variable\">[[.signDate]]</span></p>\n    </div>\n  </div>\n</body>\n</html>\n`.trim();\n        \n        // 设置初始合同模板\n        contractTemplate.value = templateExample;\n        \n        // 生成表单方法\n        const generateForm = () => {\n          try {\n            const schema = JSON.parse(schemaJson.value);\n            \n            if (!schema || schema.type !== 'object' || !schema.properties) {\n              throw new Error('无效的JSON Schema。根类型必须是object且包含properties属性。');\n            }\n            \n            // 提取表单字段\n            formFields.value = Object.entries(schema.properties).map(([key, field]) => {\n              return {\n                key,\n                ...field,\n                required: (schema.required || []).includes(key)\n              };\n            });\n            \n            // 初始化表单数据\n            formData.value = {};\n            formFields.value.forEach(field => {\n              if (field.type === 'array') {\n                formData.value[field.key] = [];\n              } else if (field.type === 'object') {\n                formData.value[field.key] = {};\n                Object.keys(field.properties).forEach(prop => {\n                  formData.value[field.key][prop] = field.properties[prop].default || '';\n                });\n              } else {\n                formData.value[field.key] = field.default || '';\n                \n                // 设置默认日期\n                if (field.format === 'date' && !field.default) {\n                  const today = new Date();\n                  formData.value[field.key] = today.toISOString().split('T')[0];\n                }\n              }\n            });\n            \n            // 计算总金额\n            if (formData.value.quantity && formData.value.unitPrice) {\n              formData.value.totalAmount = formData.value.quantity * formData.value.unitPrice;\n            }\n            \n            status.type = 'success';\n            status.message = `表单生成成功！共 ${formFields.value.length} 个字段`;\n            \n            // 更新可用变量\n            availableVariables.value = Object.keys(schema.properties);\n            \n            // 更新模板预览\n            updateTemplatePreview();\n          } catch (error) {\n            status.type = 'error-status';\n            status.message = `错误: ${error.message}`;\n            formFields.value = [];\n          }\n        };\n        \n        // 加载示例Schema\n        const loadExample = () => {\n          schemaJson.value = JSON.stringify(exampleSchema, null, 2);\n          status.type = 'success';\n          status.message = '示例Schema已加载，点击\"生成表单\"按钮创建表单';\n          generateForm();\n        };\n        \n        // 重置表单\n        const resetForm = () => {\n          schemaJson.value = '';\n          formFields.value = [];\n          formData.value = {};\n          status.type = 'success';\n          status.message = '表单已重置，请输入新的JSON Schema';\n        };\n        \n        // 保存表单数据\n        const saveFormData = () => {\n          console.log('表单数据已保存:', formData.value);\n          status.type = 'success';\n          status.message = '表单数据已保存！';\n          \n          // 更新模板预览\n          updateTemplatePreview();\n        };\n        \n        // 更新模板预览\n        const updateTemplatePreview = () => {\n          try {\n            // 使用[[ ]]作为模板语法，避免与Vue冲突\n            let result = contractTemplate.value;\n            \n            // 替换所有变量\n            Object.keys(formData.value).forEach(key => {\n              const regex = new RegExp(`\\\\[\\\\[\\\\.${key}\\\\]\\\\]`, 'g');\n              const value = formData.value[key] || '';\n              result = result.replace(regex, value);\n            });\n            \n            compiledTemplate.value = result;\n          } catch (error) {\n            compiledTemplate.value = `<div class=\"error\">模板渲染错误: ${error.message}</div>`;\n          }\n        };\n        \n        // 保存模板\n        const saveTemplate = () => {\n          console.log('合同模板已保存:', contractTemplate.value);\n          status.type = 'success';\n          status.message = '合同模板已保存到数据库！';\n          updateTemplatePreview();\n        };\n        \n        // 加载模板示例\n        const loadTemplateExample = () => {\n          contractTemplate.value = templateExample;\n          updateTemplatePreview();\n          status.type = 'success';\n          status.message = '已加载合同模板示例';\n        };\n        \n        // 生成PDF\n        const generatePDF = () => {\n          // 模拟PDF生成过程\n          pdfGenerated.value = true;\n          \n          // 在实际应用中，这里会调用后端API：\n          // 1. 将contractTemplate和formData发送到后端\n          // 2. 后端将[[ ]]替换为{{ }}以符合Golang模板语法\n          // 3. 使用Golang模板引擎填充数据\n          // 4. 使用go-wkhtmltopdf生成PDF\n          // 5. 返回PDF文件URL\n          \n          console.log('生成PDF请求已发送', {\n            template: contractTemplate.value,\n            data: formData.value\n          });\n          \n          status.type = 'success';\n          status.message = 'PDF生成成功！在实际应用中，PDF将在后端生成并存储。';\n        };\n        \n        // 下载PDF\n        const downloadPDF = () => {\n          alert('在实际应用中，这里会提供生成的PDF文件下载');\n        };\n        \n        // 初始化\n        generateForm();\n        \n        // 监听表单数据变化\n        watch(formData, (newVal) => {\n          // 自动计算总金额\n          if (newVal.quantity && newVal.unitPrice) {\n            newVal.totalAmount = newVal.quantity * newVal.unitPrice;\n          }\n          updateTemplatePreview();\n        }, { deep: true });\n        \n        return {\n          currentTab,\n          schemaJson,\n          formFields,\n          formData,\n          status,\n          contractTemplate,\n          compiledTemplate,\n          availableVariables,\n          pdfGenerated,\n          generateForm,\n          loadExample,\n          resetForm,\n          saveFormData,\n          updateTemplatePreview,\n          saveTemplate,\n          loadTemplateExample,\n          generatePDF,\n          downloadPDF\n        };\n      }\n    }).mount('#app');\n  </script>\n</body>\n</html>"
	json := `{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "销售合同",
  "description": "销售合同表单数据",
  "type": "object",
  "properties": {
    "contractTitle": {
      "type": "string",
      "title": "合同标题",
      "default": "产品销售合同"
    },
    "contractNo": {
      "type": "string",
      "title": "合同编号",
      "pattern": "^CT-[0-9]{8}$"
    },
    "signDate": {
      "type": "string",
      "title": "签署日期",
      "format": "date"
    },
    "sellerName": {
      "type": "string",
      "title": "卖方名称"
    },
    "buyerName": {
      "type": "string",
      "title": "买方名称"
    },
    "productName": {
      "type": "string",
      "title": "产品名称"
    },
    "quantity": {
      "type": "number",
      "title": "数量",
      "minimum": 1
    },
    "unitPrice": {
      "type": "number",
      "title": "单价",
      "minimum": 0
    },
    "totalAmount": {
      "type": "number",
      "title": "总金额",
      "readOnly": true
    },
    "deliveryDate": {
      "type": "string",
      "title": "交货日期",
      "format": "date"
    },
    "paymentTerms": {
      "type": "string",
      "title": "付款条款",
      "enum": [
        "预付全款",
        "货到付款",
        "30天账期",
        "60天账期"
      ]
    },
    "warrantyPeriod": {
      "type": "string",
      "title": "保修期",
      "enum": [
        "6个月",
        "1年",
        "2年",
        "3年",
        "5年"
      ]
    },
    "specialTerms": {
      "type": "string",
      "title": "特别条款",
      "format": "textarea",
      "rows": 4
    }
  },
  "required": [
    "contractTitle",
    "contractNo",
    "sellerName",
    "buyerName",
    "productName",
    "quantity",
    "unitPrice"
  ]
}`

	jsonStr, _ := json2.Marshal(json)
	pdfGen2 := models.PdfGen{
		Name:   "pdf_gen2",
		Html:   htmlTpl,
		Params: models.JsonMap(jsonStr),
	}
	goravelfacades.Orm().Query().Create(&pdfGen2)
	return nil
}
